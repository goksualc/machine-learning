# -*- coding: utf-8 -*-
"""assigment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q_c5wEvCCc8ileqneWPmlWaVHtGtFhOj
"""

#SetUp

!pip install pandas numpy scikit-learn matplotlib

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

# Load the dataset
data = pd.read_csv('iris.csv')

print(data.head())

# Provide a brief summary of the dataset
print("\nDataset Summary:")
print(f"Number of rows: {data.shape[0]}")
print(f"Number of features: {data.shape[1] - 1}")  # Subtract 1 for the target variable
print(f"Target variable: {data.columns[-1]}")
print(data.info())

# Classify everything regarding Species and SepalLengthCm, SepalWidthCm
plt.figure(figsize=(8, 6))

for species in data['Species'].unique():
    subset = data[data['Species'] == species]
    plt.scatter(subset['SepalLengthCm'], subset['SepalWidthCm'], label=species)

plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.title('Scatter Plot of Sepal Length vs. Sepal Width by Species')
plt.legend()
plt.show()

from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report

X = data.drop('Species', axis=1)
y = data['Species']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train a Decision Tree classifier
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
print(classification_report(y_test, y_pred))

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")

"""# **Reflection**

In this assignment, I learned the basic steps of implementing a machine learning model using the Iris dataset. I found the process of splitting data and visualizing it beneficial for understanding feature relationships. Working with the Decision Tree classifier introduced me to model training and evaluation techniques, especially understanding how accuracy is measured. One challenge I faced was ensuring that the data was properly split and that I understood the purpose of each feature. Overall, this exercise provided a foundational understanding of model development and testing in Python.
"""
